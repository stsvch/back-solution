// <auto-generated />
using System;
using Back.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Back.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Back.Domain.Entities.CaseStudy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("CaseStudies", (string)null);
                });

            modelBuilder.Entity("Back.Domain.Entities.Development", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Developments", (string)null);
                });

            modelBuilder.Entity("Back.Domain.Entities.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("News", (string)null);
                });

            modelBuilder.Entity("Back.Domain.Entities.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CaseStudyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DevelopmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("NewsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CaseStudyId");

                    b.HasIndex("DevelopmentId");

                    b.HasIndex("NewsId");

                    b.ToTable("Photos", (string)null);
                });

            modelBuilder.Entity("Back.Domain.Entities.Photo", b =>
                {
                    b.HasOne("Back.Domain.Entities.CaseStudy", null)
                        .WithMany("Photos")
                        .HasForeignKey("CaseStudyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Back.Domain.Entities.Development", null)
                        .WithMany("Photos")
                        .HasForeignKey("DevelopmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Back.Domain.Entities.News", null)
                        .WithMany("Photos")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Back.Domain.Entities.CaseStudy", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("Back.Domain.Entities.Development", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("Back.Domain.Entities.News", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
